Exercice: Gestion d'une Bibliothèque de Livres

Objectif : Créer un système simplifié de gestion de bibliothèque en utilisant différents conteneurs STL.

Partie 1: Création et Manipulation des Conteneurs

Définition des Structures de Données :

- Créez une struct nommée Livre qui contient des informations comme l'ID du livre (int), le titre (std::string) et l'auteur (std::string).
- Créez une std::vector<Livre> pour stocker une collection de livres.
- Ajoutez quelques livres dans le vector et affichez leur contenu en utilisant une boucle for et des itérateurs.

Utilisation de Conteneurs Associatifs :

- Créez un std::map<int, Livre> pour mapper l'ID d'un livre à son objet Livre.
- Insérez les livres du vector dans la map en utilisant leur ID comme clé.
- Recherchez un livre par son ID et affichez ses détails.

Gestion des Emprunts de Livres :

- Créez un std::set<int> pour stocker les IDs des livres actuellement empruntés.
- Ajoutez et supprimez des IDs dans le set pour simuler l'emprunt et le retour de livres.
- Utilisez find pour vérifier si un livre est actuellement emprunté.

-------------------------------------------------------
Partie 2: Opérations Avancées et Algorithmes STL

1. Tri et Filtrage des Livres :

Utilisez std::sort pour trier le vector de livres par titre.
Utilisez std::copy_if pour copier dans un nouveau vector tous les livres d'un auteur spécifique.

2. Utilisation de Conteneurs non-ordonnés :

Créez un std::unordered_map<std::string, std::vector<Livre>> pour regrouper les livres par auteur.
Parcourez le vector de livres et remplissez le unordered_map.

3. Gestion des Suggestions :

Créez une fonction qui utilise std::lower_bound et std::upper_bound dans le vector trié de livres pour suggérer des livres basés sur une plage de titres.